# Generated by Django 3.2 on 2022-10-07 06:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GenomeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株编号')),
                ('strain_genome_sequence', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否检测细菌基因组')),
                ('strain_genome_seq_id', models.CharField(blank=True, max_length=150, null=True, verbose_name='细菌基因组测序编号')),
                ('strain_genome_server_site', models.CharField(blank=True, max_length=250, null=True, verbose_name='细菌基因组序列在服务器中的存储位置')),
                ('strain_NCBI_accession', models.CharField(blank=True, max_length=50, null=True, verbose_name='细菌基因组上传NCBI的accession号')),
            ],
            options={
                'verbose_name': '菌株_基因组信息',
                'verbose_name_plural': '菌株_基因组信息',
            },
        ),
        migrations.CreateModel(
            name='Isolate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株编号')),
                ('isolation_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='分离株编号')),
                ('isolation_media', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养基')),
                ('isolation_culture_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养类型')),
                ('isolation_culture_temperature', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养温度')),
                ('isolation_culture_time_hour', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养时间')),
                ('isolation_phenotype', models.CharField(blank=True, max_length=50, null=True, verbose_name='分离株表型')),
                ('isolate_by_who', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养人员')),
                ('isolation_record_by_who', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养记录人员')),
                ('isolation_record_date', models.DateField(blank=True, null=True, verbose_name='菌株分离培养记录时间')),
            ],
            options={
                'verbose_name': '菌株_分离培养信息',
                'verbose_name_plural': '菌株_分离培养信息',
            },
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株编号')),
                ('strain_storage_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株存储盒子编号')),
                ('strain_storage_solution', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株储存液')),
                ('strain_storage_temperature_centigrade', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株储存温度')),
                ('strain_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株储存地点')),
                ('strain_storage_date', models.DateField(blank=True, null=True, verbose_name='菌株储存时间')),
            ],
            options={
                'verbose_name': '菌株_储存信息',
                'verbose_name_plural': '菌株_储存信息',
            },
        ),
        migrations.CreateModel(
            name='StrainAll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株编号')),
                ('bee_host_species', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜜蜂宿主物种')),
                ('exact_site', models.CharField(blank=True, max_length=50, null=True, verbose_name='采集地简要信息')),
                ('bee_host_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜜蜂宿主样本编号')),
                ('gut_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道样本编号')),
                ('strain_phylum', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌门')),
                ('strain_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌纲')),
                ('strain_order', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌目')),
                ('strain_family', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌科')),
                ('strain_genus', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌属')),
                ('strain_species', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌种')),
                ('ab1_quality_16s', models.CharField(blank=True, max_length=50, null=True, verbose_name='16S测序质量')),
                ('mapped_sequence_16s', models.CharField(blank=True, max_length=250, null=True, verbose_name='16S比对到的序列')),
                ('similarity_16s', models.FloatField(blank=True, null=True, verbose_name='16S比对相似度')),
                ('blast_website_16s', models.CharField(blank=True, max_length=250, null=True, verbose_name='16S比对网站')),
                ('data_file_path_16s', models.CharField(blank=True, max_length=250, null=True, verbose_name='16S序列存储位置')),
                ('blast_by_who_16s', models.CharField(blank=True, max_length=50, null=True, verbose_name='16S比对人员')),
                ('strain_genome_sequence', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否检测细菌基因组')),
                ('strain_genome_seq_id', models.CharField(blank=True, max_length=150, null=True, verbose_name='细菌基因组测序编号')),
                ('strain_genome_server_site', models.CharField(blank=True, max_length=250, null=True, verbose_name='细菌基因组序列在服务器中的存储位置')),
                ('strain_NCBI_accession', models.CharField(blank=True, max_length=50, null=True, verbose_name='细菌基因组上传NCBI的accession号')),
                ('isolation_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='分离株编号')),
                ('isolation_media', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养基')),
                ('isolation_culture_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养类型')),
                ('isolation_culture_temperature', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养温度')),
                ('isolation_culture_time_hour', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养时间')),
                ('isolation_phenotype', models.CharField(blank=True, max_length=50, null=True, verbose_name='分离株表型')),
                ('isolate_by_who', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养人员')),
                ('isolation_record_by_who', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株分离培养记录人员')),
                ('isolation_record_date', models.DateField(blank=True, null=True, verbose_name='菌株分离培养记录时间')),
                ('strain_storage_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株存储盒子编号')),
                ('strain_storage_solution', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株储存液')),
                ('strain_storage_temperature_centigrade', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株储存温度')),
                ('strain_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株储存地点')),
                ('strain_storage_date', models.DateField(blank=True, null=True, verbose_name='菌株储存时间')),
            ],
            options={
                'verbose_name': '菌株_总表',
                'verbose_name_plural': '菌株_总表',
            },
        ),
        migrations.CreateModel(
            name='StrainOrigin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株编号')),
                ('bee_host_species', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜜蜂宿主物种')),
                ('exact_site', models.CharField(blank=True, max_length=50, null=True, verbose_name='采集地简要信息')),
                ('bee_host_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜜蜂宿主样本编号')),
                ('gut_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道样本编号')),
            ],
            options={
                'verbose_name': '菌株_来源',
                'verbose_name_plural': '菌株_来源',
            },
        ),
        migrations.CreateModel(
            name='Taxonomy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strain_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌株编号')),
                ('strain_phylum', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌门')),
                ('strain_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌纲')),
                ('strain_order', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌目')),
                ('strain_family', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌科')),
                ('strain_genus', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌属')),
                ('strain_species', models.CharField(blank=True, max_length=50, null=True, verbose_name='菌种')),
            ],
            options={
                'verbose_name': '菌株_分类',
                'verbose_name_plural': '菌株_分类',
            },
        ),
    ]
