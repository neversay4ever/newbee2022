# Generated by Django 3.2 on 2022-10-07 06:46

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbdomenStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('abdomen_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织编号')),
                ('abdomen_preservation', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织保存方法')),
                ('abdomen_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部用途')),
                ('abdomen_dissection_state', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部解剖状态')),
                ('abdomen_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织样本盒编号')),
                ('abdomen_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织保存位置')),
            ],
            options={
                'verbose_name': '蜜蜂_腹部组织存储',
                'verbose_name_plural': '蜜蜂_腹部组织存储',
            },
        ),
        migrations.CreateModel(
            name='BeeAll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('continent_ocean', models.CharField(blank=True, max_length=50, null=True, verbose_name='大洲')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='国家')),
                ('state_province', models.CharField(blank=True, max_length=50, null=True, verbose_name='省')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='市')),
                ('county', models.CharField(blank=True, max_length=50, null=True, verbose_name='县')),
                ('town', models.CharField(blank=True, max_length=50, null=True, verbose_name='乡镇')),
                ('village', models.CharField(blank=True, max_length=50, null=True, verbose_name='村')),
                ('exact_site', models.CharField(blank=True, max_length=250, null=True, verbose_name='采集地简要信息')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='纬度')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='经度')),
                ('altitude', models.IntegerField(blank=True, null=True, verbose_name='海拔')),
                ('geo_notes', models.TextField(verbose_name='采集地备注')),
                ('collector_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='采集人')),
                ('collection_date', models.DateField(blank=True, null=True, verbose_name='采集日期')),
                ('sample_phylum', models.CharField(blank=True, max_length=50, null=True, verbose_name='门')),
                ('sample_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='纲')),
                ('sample_order', models.CharField(blank=True, max_length=50, null=True, verbose_name='目')),
                ('sample_family', models.CharField(blank=True, max_length=50, null=True, verbose_name='科')),
                ('sample_genus', models.CharField(blank=True, max_length=50, null=True, verbose_name='属')),
                ('sample_species', models.CharField(blank=True, max_length=50, null=True, verbose_name='种')),
                ('sample_subspecies', models.CharField(blank=True, max_length=50, null=True, verbose_name='亚种')),
                ('sample_breed', models.CharField(blank=True, max_length=50, null=True, verbose_name='品种')),
                ('identifier_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='鉴定人')),
                ('identifier_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='鉴定人邮箱')),
                ('identifier_institution', models.CharField(blank=True, max_length=250, null=True, verbose_name='鉴定人单位')),
                ('barcode_result', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否有条形码')),
                ('multi_num', models.IntegerField(default=1, verbose_name='同管个体数目')),
                ('caste_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='级型')),
                ('labor_division', models.CharField(blank=True, max_length=50, null=True, verbose_name='分工')),
                ('life_style', models.CharField(blank=True, max_length=50, null=True, verbose_name='饲养方式')),
                ('life_stage', models.CharField(blank=True, max_length=50, null=True, verbose_name='生活史')),
                ('beekeeper', models.CharField(blank=True, max_length=50, null=True, verbose_name='养蜂人')),
                ('apiary_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂场编号')),
                ('hive_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂箱编号')),
                ('host_origin', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂群来源')),
                ('hive_year', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂群保有年限')),
                ('decapping_freq', models.CharField(blank=True, max_length=50, null=True, verbose_name='年取蜜频次')),
                ('feeding_or_not', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否喂食花粉蔗糖')),
                ('feeding_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='喂食细节')),
                ('habitat_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='生境类型')),
                ('habitat_photo_file_path', models.CharField(blank=True, max_length=250, null=True, verbose_name='生境照片存储位置')),
                ('pesticide_or_not', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否用药')),
                ('pesticide_detail', models.CharField(blank=True, max_length=250, null=True, verbose_name='用药细节')),
                ('flower_species', models.CharField(blank=True, max_length=250, null=True, verbose_name='蜜粉源植物')),
                ('flower_photo_file_path', models.CharField(blank=True, max_length=250, null=True, verbose_name='蜜粉源植物照片存储位置')),
                ('record_by_who', models.CharField(blank=True, max_length=50, null=True, verbose_name='记录人')),
                ('record_datetime', models.DateField(blank=True, null=True, verbose_name='记录日期')),
                ('sample_notes', models.TextField(blank=True, null=True, verbose_name='样本备注')),
                ('headthorax_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织编号')),
                ('headthorax_preservation', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织保存方法')),
                ('headthorax_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸用途')),
                ('thorax_dessection', models.CharField(blank=True, max_length=50, null=True, verbose_name='解剖状态')),
                ('headthorax_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织盒编号')),
                ('headthorax_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织存储位置')),
                ('abdomen_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织编号')),
                ('abdomen_preservation', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织保存方法')),
                ('abdomen_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部用途')),
                ('abdomen_dissection_state', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部解剖状态')),
                ('abdomen_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织样本盒编号')),
                ('abdomen_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='腹部组织保存位置')),
                ('gut_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织编号')),
                ('gut_storage', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织保存方法')),
                ('gut_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道用途')),
                ('gut_dissection_state', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道解剖状态')),
                ('gut_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织样本盒编号')),
                ('gut_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织保存位置')),
                ('leg_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织编号')),
                ('leg_storage', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织保存方法')),
                ('leg_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='足用途')),
                ('leg_dissection_state', models.CharField(blank=True, max_length=50, null=True, verbose_name='足解剖状态')),
                ('leg_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织样本盒编号')),
                ('leg_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织保存位置')),
            ],
            options={
                'verbose_name': '蜜蜂_总表',
                'verbose_name_plural': '蜜蜂_总表',
            },
        ),
        migrations.CreateModel(
            name='CollectionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('continent_ocean', models.CharField(blank=True, max_length=50, null=True, verbose_name='大洲')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='国家')),
                ('state_province', models.CharField(blank=True, max_length=50, null=True, verbose_name='省')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='市')),
                ('county', models.CharField(blank=True, max_length=50, null=True, verbose_name='县')),
                ('town', models.CharField(blank=True, max_length=50, null=True, verbose_name='乡镇')),
                ('village', models.CharField(blank=True, max_length=50, null=True, verbose_name='村')),
                ('exact_site', models.CharField(blank=True, max_length=250, null=True, verbose_name='采集地简要信息')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='纬度')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='经度')),
                ('altitude', models.IntegerField(blank=True, null=True, verbose_name='海拔')),
                ('geo_notes', models.TextField(verbose_name='采集地备注')),
                ('collector_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='采集人')),
                ('collection_date', models.DateField(blank=True, null=True, verbose_name='采集日期')),
            ],
            options={
                'verbose_name': '蜜蜂_采集信息',
                'verbose_name_plural': '蜜蜂_采集信息',
            },
        ),
        migrations.CreateModel(
            name='GutStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('gut_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织编号')),
                ('gut_storage', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织保存方法')),
                ('gut_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道用途')),
                ('gut_dissection_state', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道解剖状态')),
                ('gut_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织样本盒编号')),
                ('gut_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='肠道组织保存位置')),
            ],
            options={
                'verbose_name': '蜜蜂_肠道组织存储',
                'verbose_name_plural': '蜜蜂_肠道组织存储',
            },
        ),
        migrations.CreateModel(
            name='HeadthoraxStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sampel_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('headthorax_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织编号')),
                ('headthorax_preservation', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织保存方法')),
                ('headthorax_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸用途')),
                ('thorax_dessection', models.CharField(blank=True, max_length=50, null=True, verbose_name='解剖状态')),
                ('headthorax_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织盒编号')),
                ('headthorax_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='头胸组织存储位置')),
            ],
            options={
                'verbose_name': '蜜蜂_头胸组织存储',
                'verbose_name_plural': '蜜蜂_头胸组织存储',
            },
        ),
        migrations.CreateModel(
            name='LegStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('leg_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织编号')),
                ('leg_storage', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织保存方法')),
                ('leg_usage', models.CharField(blank=True, max_length=50, null=True, verbose_name='足用途')),
                ('leg_dissection_state', models.CharField(blank=True, max_length=50, null=True, verbose_name='足解剖状态')),
                ('leg_box_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织样本盒编号')),
                ('leg_storage_location', models.CharField(blank=True, max_length=50, null=True, verbose_name='足组织保存位置')),
            ],
            options={
                'verbose_name': '蜜蜂_足组织存储',
                'verbose_name_plural': '蜜蜂_足组织存储',
            },
        ),
        migrations.CreateModel(
            name='SpecimenDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('multi_num', models.IntegerField(default=1, verbose_name='同管个体数目')),
                ('caste_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='级型')),
                ('labor_division', models.CharField(blank=True, max_length=50, null=True, verbose_name='分工')),
                ('life_style', models.CharField(blank=True, max_length=50, null=True, verbose_name='饲养方式')),
                ('life_stage', models.CharField(blank=True, max_length=50, null=True, verbose_name='生活史')),
                ('beekeeper', models.CharField(blank=True, max_length=50, null=True, verbose_name='养蜂人')),
                ('apiary_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂场编号')),
                ('hive_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂箱编号')),
                ('host_origin', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂群来源')),
                ('hive_year', models.CharField(blank=True, max_length=50, null=True, verbose_name='蜂群保有年限')),
                ('decapping_freq', models.CharField(blank=True, max_length=50, null=True, verbose_name='年取蜜频次')),
                ('feeding_or_not', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否喂食花粉蔗糖')),
                ('feeding_description', models.CharField(blank=True, max_length=250, null=True, verbose_name='喂食细节')),
                ('habitat_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='生境类型')),
                ('habitat_photo_file_path', models.CharField(blank=True, max_length=250, null=True, verbose_name='生境照片存储位置')),
                ('pesticide_or_not', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否用药')),
                ('pesticide_detail', models.CharField(blank=True, max_length=250, null=True, verbose_name='用药细节')),
                ('flower_species', models.CharField(blank=True, max_length=250, null=True, verbose_name='蜜粉源植物')),
                ('flower_photo_file_path', models.CharField(blank=True, max_length=250, null=True, verbose_name='蜜粉源植物照片存储位置')),
                ('record_by_who', models.CharField(blank=True, max_length=50, null=True, verbose_name='记录人')),
                ('record_datetime', models.DateField(blank=True, null=True, verbose_name='记录日期')),
                ('sample_notes', models.TextField(blank=True, null=True, verbose_name='样本备注')),
            ],
            options={
                'verbose_name': '蜜蜂_标本信息',
                'verbose_name_plural': '蜜蜂_标本信息',
            },
        ),
        migrations.CreateModel(
            name='Taxonomy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sample_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='标本编号')),
                ('sample_phylum', models.CharField(blank=True, max_length=50, null=True, verbose_name='门')),
                ('sample_class', models.CharField(blank=True, max_length=50, null=True, verbose_name='纲')),
                ('sample_order', models.CharField(blank=True, max_length=50, null=True, verbose_name='目')),
                ('sample_family', models.CharField(blank=True, max_length=50, null=True, verbose_name='科')),
                ('sample_genus', models.CharField(blank=True, max_length=50, null=True, verbose_name='属')),
                ('sample_species', models.CharField(blank=True, max_length=50, null=True, verbose_name='种')),
                ('sample_subspecies', models.CharField(blank=True, max_length=50, null=True, verbose_name='亚种')),
                ('sample_breed', models.CharField(blank=True, max_length=50, null=True, verbose_name='品种')),
                ('identifier_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='鉴定人')),
                ('identifier_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='鉴定人邮箱')),
                ('identifier_institution', models.CharField(blank=True, max_length=250, null=True, verbose_name='鉴定人单位')),
                ('barcode_result', models.CharField(blank=True, max_length=50, null=True, verbose_name='是否有条形码')),
            ],
            options={
                'verbose_name': '蜜蜂_分类信息',
                'verbose_name_plural': '蜜蜂_分类信息',
            },
        ),
    ]
